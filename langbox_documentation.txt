Initialize backend 
sources:

NODE.JS
MONGODB 


install depedencies 

-npm init -y

-install depedencies


  "dependencies": {
    "bcryptjs": "^2.4.3",
    "config": "^3.3.7",
    "express": "^4.17.3",
    "express-validator": "^6.14.0",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^6.2.2"
  },
  "devDependencies": {
    "concurrently": "^7.0.0",
    "nodemon": "^2.0.15"
  }



-create and initiate basic server

- create routes folder 
- create route files 


-define middleware routes on server.js

	app.use('/api/users', require('./routes/users'));
	app.use('/api/auth', require('./routes/auth'));


- create routes endpoints 


- create config files with mongodbkey 

- connect mongodb 


- Create a schema on mongodb

 With Mongoose, you would define a Schema object in your application code 
 that maps to a collection in your MongoDB database. 
 The Schema object defines the structure of the documents in your collection. 
 Then, you need to create a Model object out of the schema.
  The model is used to interact with the collection.


